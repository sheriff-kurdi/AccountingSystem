
@page "/expenses"

<EditForm Model="@ExpensesVM" OnValidSubmit=@HandleValidSubmit>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>Add Expenses </h3>

    <div class="form-group row">
        <label for="CrValue" class="col-sm-2 col-form-label">
            CrValue
        </label>
        <div class="col-sm-10">
            <InputNumber id="CrValue" class="form-control" placeholder="CrValue"
                         @bind-Value="ExpensesVM.ExpensesValue" />
            <ValidationMessage For="@(()=> ExpensesVM.ExpensesValue)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="CrTransaction" class="col-sm-2 col-form-label">
            CrTransaction
        </label>
        <div class="col-sm-10">

            <InputSelect id="CrTransaction" @bind-Value="ExpensesVM.ExpensesEntry" class="form-control">
                @foreach (var expenses in Enum.GetValues(typeof(ExpensesEntries)))
                {
                    <option value="@expenses">@expenses</option>
                }
                /**/
                /**/

            </InputSelect>

        </div>
    </div>


    <button type="submit" class="btn btn-primary "> Add Expenses </button>

</EditForm>
@code {

    [Inject]
    public NavigationManager Navigation { get; set; }
    [Inject]
    public AccountingSystem.Service.IncomeStatments.IncomeStatmentService incomeStatmentService { get; set; }
    public AccountingSystem.Core.ViewModels.Expenses ExpensesVM { get; set; } = new Core.ViewModels.Expenses();


    private async Task HandleValidSubmit()
    {
        await incomeStatmentService.updateincomestatmentWithExpenses(ExpensesVM);
        Navigation.NavigateTo("/balanceSheet");

    }
}
