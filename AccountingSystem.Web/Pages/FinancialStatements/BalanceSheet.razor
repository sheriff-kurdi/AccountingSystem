@page "/balanceSheet"
@if (Balance == null)
{

}
else
{
    <span @onclick="CreateNewBalace" class="oi oi-plus" aria-hidden="true">  new balance sheet </span>

<center> Company </center>
<center> Balance Sheet </center>
<center> @Balance.Date </center>
<hr />
<br />

<div class="container">



    <div class="row">
        <div class="col col-sm-12 col-md-6 col-lg-6">
            <div class="row">
                <h1><u>Assets</u></h1>
            </div>                <div class="row">
                <h4>Cash.... @Balance.Cash</h4>
            </div>

            <div class="row">
                <h4>Account Recevable.... @Balance.AccountRecevable</h4>
            </div>

            <div class="row">
                <h4>Goods.... @Balance.Goods</h4>
            </div>

            <div class="row">
                <h4>Equipments.... @Balance.Equipments</h4>
            </div>

            <div class="row">
                <h4>Land..... @Balance.Land</h4>
            </div>

            <div class="row">
                <h4>Building.... @Balance.Building</h4>
            </div>

            <br /> <br />
            <div class="row">
                <h4>Total Assets.... @Balance.TotalAsset</h4>
            </div>

            <br /><br />

        </div>






        <div class="col col-sm-12 col-md-6 col-lg-6">
            <div class="row">
                <h1><u>Liabilities</u></h1>
            </div>
            <div class="row">
                <h4>Account Pyable.... @Balance.AccountPyable</h4>
            </div>
 
            @*<div class="row">
                <h4>Loans.... @Balance.Loans</h4>
            </div>*@





            <br /> <br />

            <div class="row">
                <h1><u>Owner's Equity</u></h1>
            </div>
            <div class="row">
                <h4>Capital .... @Balance.Capital</h4>
            </div>



            <br /> <br />
            <div class="row">
                <h4>Totall Liability And Equity.... @Balance.TotallLiabilityAndEquity</h4>
            </div>
        </div>





    </div>

</div>
<hr />


}

@code {
    [Inject]
    public AccountingSystem.Core.IRepo.IBalanceRepo balanceRepo { get; set; }
    [Inject]
    public AccountingSystem.Service.Balances.BalanceService balanceService { get; set; }
    public Balance Balance { get; set; }

    public AsyncCallback onABalanceAdded { get; set; }

    public async Task CreateNewBalace()
    {
        // You can pass the old balance for continuas data or and brand new one and clear all transactions
        Balance balance = new Balance()
        {
            AccountPyable = 0,
            AccountRecevable = 0,
            Building = 0,
            Capital = 0,
            Cash = 0,
            Date = DateTime.Now,
            Equipments = 0,
            Goods = 0,
            Land = 0,
            Loans = 0,
            SalaryPyable = 0,

        };

        await balanceService.CreateNewBalance(balance);
    }

    protected override async Task OnInitializedAsync()
    {
        Balance = await balanceRepo.GetLastBalance();
    }


}
